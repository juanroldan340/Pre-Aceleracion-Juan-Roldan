// <auto-generated />
using System;
using DisneyAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DisneyWebAPI.Migrations
{
    [DbContext(typeof(DisneyDbContext))]
    [Migration("20220606012945_DisneyFirstMigration")]
    partial class DisneyFirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DisneyAPI.Models.Character", b =>
                {
                    b.Property<int?>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("CharacterId"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("History")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("CharacterId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("DisneyAPI.Models.Genre", b =>
                {
                    b.Property<int?>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("GenreId"), 1L, 1);

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreId = 1,
                            Name = "Aventura"
                        },
                        new
                        {
                            GenreId = 2,
                            Name = "Romántica"
                        },
                        new
                        {
                            GenreId = 3,
                            Name = "Acción"
                        },
                        new
                        {
                            GenreId = 4,
                            Name = "Ciencia Ficción"
                        },
                        new
                        {
                            GenreId = 5,
                            Name = "Comedia"
                        },
                        new
                        {
                            GenreId = 6,
                            Name = "Terror"
                        });
                });

            modelBuilder.Entity("DisneyAPI.Models.MovieOrSerie", b =>
                {
                    b.Property<int?>("MovieOrSerieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("MovieOrSerieId"), 1L, 1);

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Qualification")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MovieOrSerieId");

                    b.HasIndex("GenreId");

                    b.ToTable("MoviesOrSeries");
                });

            modelBuilder.Entity("DisneyWebAPI.Models.CharacterMovieOrSerie", b =>
                {
                    b.Property<int?>("CharactersId")
                        .HasColumnType("int");

                    b.Property<int?>("MoviesOrSeriesId")
                        .HasColumnType("int");

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("MovieOrSerieId")
                        .HasColumnType("int");

                    b.HasKey("CharactersId", "MoviesOrSeriesId");

                    b.HasIndex("CharacterId");

                    b.HasIndex("MovieOrSerieId");

                    b.ToTable("CharactersMoviesOrSeries");
                });

            modelBuilder.Entity("DisneyAPI.Models.MovieOrSerie", b =>
                {
                    b.HasOne("DisneyAPI.Models.Genre", null)
                        .WithMany("MovieOrSerie")
                        .HasForeignKey("GenreId");
                });

            modelBuilder.Entity("DisneyWebAPI.Models.CharacterMovieOrSerie", b =>
                {
                    b.HasOne("DisneyAPI.Models.Character", "Character")
                        .WithMany("MovieOrSerie")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DisneyAPI.Models.MovieOrSerie", "MovieOrSerie")
                        .WithMany("Character")
                        .HasForeignKey("MovieOrSerieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("MovieOrSerie");
                });

            modelBuilder.Entity("DisneyAPI.Models.Character", b =>
                {
                    b.Navigation("MovieOrSerie");
                });

            modelBuilder.Entity("DisneyAPI.Models.Genre", b =>
                {
                    b.Navigation("MovieOrSerie");
                });

            modelBuilder.Entity("DisneyAPI.Models.MovieOrSerie", b =>
                {
                    b.Navigation("Character");
                });
#pragma warning restore 612, 618
        }
    }
}
